heat_template_version: 2015-10-15

description: >
  Build network, and deploy en instannce

parameters:
  key_name:
    type: string
    label: Name of keypair to assign to servers
    description: key_name=foo
  subnet_cidr:
    type: string
    default: "192.168.1.0/24"
  subnet_start:
    type: string
    default: "192.168.1.100"
  subnet_end:
    type: string
    default: "192.168.1.200"
  gateway_ip:
    type: string
    default: "192.168.1.254"
  dns_nameservers:
    type: comma_delimited_list
    label: DNS nameservers
    description: dns_nameservers=8.8.8.8,8.8.4.4
  floatingip_network_name:
    type: string
    label: The Floating Network
    description: floatingip_network_name=public
  flavor:
    type: string
    label: The flavor for bastion Instances
    description: flavor=small
  image:
    type: string
    label: The debian image based for Instances
    description: image=debian-8-latest
    default: debian-8-latest
  vol_size:
    type: number
    description: The size of the Cinder root volume for instance
    default: 10
  vol_type:
    type: string
    description: The volume type of the Cinder volume for instance
    default: default

resources:
  extrouter:
    type: OS::Neutron::Router
    properties:
      external_gateway_info:
        network: { get_param: floatingip_network_name }

  network:
    type: OS::Neutron::Net

  subnet:
    type: OS::Neutron::Subnet
    properties:
      cidr: {get_param: subnet_cidr}
      network: {get_resource: network}
      allocation_pools: [{"start" : {get_param: subnet_start}, "end" : {get_param: subnet_end}}]
      dns_nameservers: {get_param: dns_nameservers}
      enable_dhcp: True
      gateway_ip: {get_param: gateway_ip}
      ip_version: 4

  interface:
    type: OS::Neutron::RouterInterface
    properties:
      router_id: { get_resource: extrouter }
      subnet_id: { get_resource: subnet }

  security_group:
    type: OS::Neutron::SecurityGroup
    properties:
      rules:
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 22
          port_range_max: 22
          direction: ingress
        - remote_ip_prefix: 0.0.0.0/0
          protocol: tcp
          port_range_min: 80
          port_range_max: 80
          direction: ingress
        - remote_ip_prefix: 0.0.0.0/0
          protocol: icmp
          direction: ingress

  wait_handle:
    type: OS::Heat::WaitConditionHandle

  wait_condition:
    type: OS::Heat::WaitCondition
    depends_on: instance
    properties:
      handle: {get_resource: wait_handle}
      timeout: 6000

  floating_ip:
    type: OS::Neutron::FloatingIP
    properties:
      floating_network: {get_param: floatingip_network_name}
      port_id: {get_resource: port}

  port:
    type: OS::Neutron::Port
    properties:
      network_id: { get_resource: network }
      security_groups:
        - { get_resource: security_group }

  root_volume:
    type: OS::Cinder::Volume
    properties:
      image: { get_param: image }
      size: { get_param: vol_size }
      volume_type: { get_param: vol_type }

  instance:
    type: OS::Nova::Server
    properties:
      key_name: { get_param: key_name }
      block_device_mapping_v2: [{ device_name: "vda", volume_id : { get_resource : root_volume }, delete_on_termination : true }]
      flavor: { get_param: flavor }
      networks:
        - port: { get_resource: port }
      user_data:
        str_replace:
          template: |
            #!/bin/bash -v
            apt-get update -qqy
            apt-get install -qqy curl
            $wc_notify --data-binary '{"status": "SUCCESS"}'
          params:
            $wc_notify: {get_attr: [wait_handle, curl_cli]}

outputs:
  floating_ip_address:
    value: { get_attr: [ floating_ip, floating_ip_address ] }
